{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,6BAC9BE,KAAMH,SAASC,cAAc,4BAC7BG,OAAQJ,SAASC,cAAc,8BAC/BI,UAAWL,SAASC,cAAc,gCAUpC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAE7B,MAAMC,EAAgBC,KAAKC,SAAW,GAErCC,YAAW,KACJH,EACFF,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CAlBbJ,EAAKC,KAAKgB,iBAAiB,UAAU,SAAUC,GAC7CA,EAAMC,iBAsBR,WACA,MAAMC,EAAQC,SAASrB,EAAKI,MAAMkB,OAC1BjB,EAAOgB,SAASrB,EAAKK,KAAKiB,OAC1BhB,EAASe,SAASrB,EAAKM,OAAOgB,OAGpC,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAQiB,IAAK,CAIhCf,EAHiBe,EACIH,GAASG,EAAI,GAAKlB,GAGpCmB,MAAK,EAACf,SAAEA,EAAQL,MAAEA,MACjBqB,EAAA3B,GAAS4B,OAAOC,QAAQ,sBAAsBlB,QAAeL,MAAU,IAExEwB,OAAM,EAACnB,SAAEA,EAAQL,MAAEA,MAClBqB,EAAA3B,GAAS4B,OAAOG,QAAQ,qBAAqBpB,QAAeL,MAAU,G,EApC5E0B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.form input[name=\"delay\"]'),\n  step: document.querySelector('.form input[name=\"step\"]'),\n  amount: document.querySelector('.form input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('.form button[type=\"submit\"]')\n};\n\nrefs.form.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  createPromises();\n});\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n  const shouldResolve = Math.random() > 0.3;\n \n   setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nfunction createPromises() {\nconst delay = parseInt(refs.delay.value);\n  const step = parseInt(refs.step.value);\n  const amount = parseInt(refs.amount.value);\n\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","btnSubmit","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","value","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.838ad6d2.js.map"}